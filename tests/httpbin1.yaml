apiVersion: v1
kind: Namespace
metadata:
  name: httpbin1
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin1
  namespace: httpbin1
  labels:
    app: httpbin1
    service: httpbin1
spec:
  ports:
  - name: http
    port: 8000
    targetPort: 80
  selector:
    app: httpbin1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin1
  namespace: httpbin1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpbin1
      version: v1
  template:
    metadata:
      labels:
        app: httpbin1
        opa-injection: opa-policy-httpbin1
        version: v1
    spec:
      containers:
      - image: docker.io/kong/httpbin
        imagePullPolicy: IfNotPresent
        name: httpbin
        ports:
        - containerPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: httpbin1
  namespace: httpbin1
spec:
  hosts:
  - "httpbin1.example.com"
  gateways:
  - istio-system/public
  http:
  - route:
    - destination:
        port:
          number: 8000
        host: httpbin1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: opa-policy-httpbin1
  namespace: httpbin1
data:
  policy.rego: |
    package httpbin1

    import input.attributes.request.http as http_request
    import input.parsed_path

    default allow = false

    allow {
      parsed_path[0] == "health"
      http_request.method == "GET"
    }

    allow {
      parsed_path[0] == "headers"
    }
  config.yaml: |
    plugins:
      envoy_ext_authz_grpc:
        addr: :9191
        path: httpbin1/allow
    decision_logs:
      console: true